# -*- coding: utf-8 -*-
"""forgithub.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RQddUTEEvQSxpXcFNSqiawCnr1bxa9Ll
"""

print("hello world")

fruits = ["apple", "banana", "cherry", "kiwi", "mango"]

newlist = [x for x in fruits if "a" in x]

print(newlist)

#newlist = [expression for item in iterable if condition == True]

fruits = ["apple", "banana", "cherry", "kiwi", "mango"]
newfruits=[x for x in fruits if x=="banana"]
print(newfruits)

fruits = ["apple", "banana", "cherry", "kiwi", "mango"]
newfruits=[x for x in fruits if x!="banana"]
print(newfruits)

#LIST COMPREHENSION

userdic2={q:q**2 for q in [1,12,890,78,45]}
print("user_dic2",userdic2)

userdic3={q:q**3 for q in range(30) if q**3%4==0}
print(userdic3)

str ="{}"
paren={"}": "{"}
stack=[]
valid= True
for char in str:
    if char in paren:
      if stack and stack[-1] == paren[char]:
        stack.pop()
      else:
        valid=False
        break
    else:
        stack.append(char)

if stack:
  valid=False

if valid:
  print("valid")
else:
  print("invalid")

# prompt: integer to roman using dictionary

def int_to_roman(num):
    roman_map = { 1: 'I', 4: 'IV', 5: 'V', 9: 'IX', 10: 'X', 40: 'XL', 50: 'L', 90: 'XC', 100: 'C', 400: 'XD', 500: 'D', 900: 'CM', 1000: 'M'}
    integers = list(roman_map)
    symbols = list(roman_map.values())

    i = 12
    result = ""

    while num != 0:
        if integers[i] <= num:
            result += symbols[i]
            num -= integers[i]
        else:
            i -= 1

    return result



"""int_to_roman(558)"""

roman_dict={"M":1000,"CM":900,"D":500,"XD":400,"C":100, "XC":90, "L":50 , "XL":40 , "X":10 , "IX":9 , "V": 5 , "IV": 4 , "I":1 }
num=558

result=''
for key in roman_dict:

  while num>=roman_dict[key]:
    result+=key
    num-=roman_dict[key]
print(result)

if __name__ == '__main__':
    x = int(input())
    y = int(input())
    z = int(input())
    n = int(input())
    coordinates = [[i, j, k] for i in range(x+1) for j in range(y+1) for k in range(z+1) if i + j + k != n]
    print(coordinates)

if __name__ == '__main__':
  n = int(input())
  arr = map(int, input().split())
  arr=list(set(arr))
  arr.sort()
  print(arr[-2])

#take a num from 2 to 5 and print its table
num=int(input("enter your number : "))
for j in range(2,6,1):
  if num==j:
    for i in range(1,11):
      print(num,"*",i,"=",num*i)

num=int(input("enter your number : "))
for i in range(6,2,-1):
  if num==i:
    for j in range(1,11):
      print(num,"*",j,"=",num*j)

#printing table in reverse
num=int(input("enter your number : "))
for i in range(10,0,-1):
  print(num,"*",i,"=",num*i)

num=int(input("enter your number: "))
def isprime(num):
  for i in range(2,num):
    if num%i==0:
      print("not prime")
      break
    else:
      print("prime")
      break

isprime(num)

for i in range(2,20):
  for j in range(2,i):
    if i%j==0:
      print( i,"not prime")
      break
    else:
      print(i,"prime")
      break

n=int(input("enter your number: "))
for i in range(n):
  for j in range(n-i):
    print("*",end="")
  print()

n=int(input("enter your number: "))
for i in range(n):
  for j in range(n-i):
    print("$",end="")
  for k in range(i+1):
    print("*",end="")
  print()

l1=[10,10,20,30,"abc"]
l1.append(20)  #element
print(l1)

l1=[10,10,20,30,"abc"]
l1.pop()
print(l1)

l1=[10,10,20,30,"abc"]
l1.pop(1)  #position
print(l1)

l1=[10,10,20,30,"abc"]
l1.remove(10) #element
print(l1)

l1=[10,10,20,30,"abc"]
l1.remove("abc")
l1.sort()   #takes only one type of database
print(l1)

l1=[10,10,20,30,"abc"]
l1.insert(3,35)   #add element at specified position
print(l1)

list=[10,20,20,30,400,500,60,13,45 ,123]

target=143
x=[]

for i in range(0,len(list)-1):
    for j in range(-1,len(list)):
        if list[i]+list[j]==target:
            x.append((list[i], list[j]))

print(x)

n=int(input("enter your number : "))
temp=n
reverse=0
while(n>0):
 remainder=n%10
 reverse = (reverse * 10) + remainder
 n=n//10

if (temp==reverse):
    print("palindrome")
else:
    print("not palindrome")

def ispalindrome(str):
    for i in range(0,int(len(str)/2)):
        if str[i]!=str[len(str)-i-1]:
            return False
    return True

string="RACECAR"
ans=ispalindrome(string)

if(ans):
    print(string,"is a palindrome")
else:
    print("not palindrome")

n=3
for i in range(n):
    for j in range(n-i):
        print(" ", end=" ")
    for k in range(i+1):
        print(" *", end=" ")
    print()

n=4
for i in range(n):
    for j in range(i):
        print(" ", end=" ")
    for k in range(n-i):
        print("* ",end=" ")
    print()

n=int(input("enter your number:"))
fact=[]
for i in range(1,n+1):
    if n%i==0:
        fact.append(i)

print(fact)

